public class Server05 {	static HashSet<Socket> sockets = new HashSet<Socket>();		public static void main(String[] args) throws IOException {				//以下一行代码就创建了一个网络服务器(创建一个饭店)		ServerSocket ss = new ServerSocket(8888);		System.out.println("创建了一个服务器，等待客户端连接!");				while(true)		{			//服务器启动(饭店开门)，接收客户端连接			//线程阻塞在这里，知道有客户端连接			Socket socket = ss.accept();						Server05.sockets.add(socket);						System.out.println("有1个客户端连接上服务器了");						//每当有一个客户端连接到我服务器，我服务器就为其创建一个单独的线程提供服务			new ServerThread5(socket).start();					}				}}class ServerThread5 extends Thread{	private Socket socket;		public ServerThread5(Socket socket)	{		this.socket = socket;	}		public void run() {				PrintStream ps;		try {			ps = new PrintStream(socket.getOutputStream());						String line = null;						BufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream()));						//以下一行会线程阻塞 读到不为null就写，没读到就等待			while((line = br.readLine()) != null)			{				//打印到服务器自己的控制台				System.out.println(line);								for (Socket s : Server05.sockets) {					ps = new PrintStream(s.getOutputStream());										//前边加一个echo 返给客户端					ps.println("echo: " + line);					ps.flush();				}											}					} catch (IOException e) {			e.printStackTrace();		}			}