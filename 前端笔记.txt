
前端开发环境
	WebStorm（推荐使用）、Hbuilder
	WebStorm破解--------->（百度搜索lanyu）
大数据培养方向
	大数据架构、大数据编程（本科）
	大数据分析、挖掘（研究生）
	
苹果系统也是基于linux系统，所以程序员大都使用Mac

服务器架构

前端

	css			层叠样式表
	html		超文本标记语言

	标签
	谷歌浏览器运行速度快，具有通用性
	
	旋转的时候用deg
		deg			角度
		
	DOCTYPE------------>文档说明
	
	超文本----->不是普通文本，可以设置连接
	标签------->给文本的标记，通过这个标记可以找到文本，从而控制文本
	双标签、单标签
	
	树文档
	
	属性-------->标签通过属性来说明问题
	
	head-------->对于文档的说明（描述信息）
	body-------->在页面中呈现
	
	
	什么是大数据？
	职业规划？
	为什么想要留在这里？
	
	学习学习方式，思考方法
	
	呈现形式
		页面中看到的所有东西都是矩形
	功能：
		<div><div>					内容标签
		<a></a>						超链接标签
		<img>						图片标签
		<ul></ul>					无序列表
		<ol></ol>					有序列表
		<table></table>				表格
	排列方式
		块元素						不能和别的元素共享一行
									能设置宽高
		行内元素					能和别的元素在同一行显示
									不能设置宽高
		行内块元素					既有行内元素的特点又有块元素的特点
		
	一个div默认的高度是文本的高度，默认的宽度是浏览器的宽度，默认高度是没有
	css样式放在style中
	所有修饰文字的标签全是行元素，除此之外全部标签全是块元素
	
	div是典型的块元素，span是典型的行元素
	
	SEO			搜索引擎优化
		百度竞价排名
		把关键字写入<strong>加粗</strong>中在显示粗体的同时，还会强调搜索引擎去搜索
					<em>倾斜<em>
					<del>删除<del>
	
	万网		查询域名
	
	选择器
	元素选择器（标签选择器）
	
	后代选择器
		子选择器
			父选择器:nth-chile(1){}
	类选择器
		类名不能以数字开头
		.类名 {}
		
		<标签 class="类名">
	id选择器
		#id名｛｝
		<标签 id="id名">
	伪类选择器
		.类名:hover {}		
		#id名:hover {}		
	交叉选择器
		.类名1.类名2{}

	
		
	选择器的优先级	
		id > class > 标签
		哪种选择器指的更具体，优先级就越高
		平级选择器哪个在后面显示哪个，后面会覆盖前面
		id相当于身份证号，在一个页面只能出现一次
		复合 同向比较比相同选择器的优先级高
	
		
	html承载的是内容，css承载的是样式
	
	css改变文本的属性：
		/*注释*/
		color: rgb(255,0,0);
      font-size: 50px;
      font-weight: bold;
      text-align: left;
      line-height: 100px;
      text-decoration: underline;
      font-family: "宋体，黑体，微软雅黑";
	  ----------------------------------------
	  width: 200px;height: 200px;
      border: red dashed 10px;
      margin-bottom: 20px;				外边距
      padding: 10px;					内边距
	  
	盒子模型
		宽高	边界	外边距	内边距
	
		内边距会影响宽度
		
	浮动
		解决块元素不能在同行显示的问题
		行内块元素的两个元素之间会出现空隙，除非代码不换行
		无论是块元素还是行元素只要进行了浮动就能够在一行显示并且可以设置宽高，忽略掉空格
		
		为了让一个元素和其他元素共享一行，可以设置宽高并且忽略空格，从而达到布局的目的
		
		依次向前一个元素靠，如果浏览器的剩余宽度不足以存放剩下的元素，剩下的元素会自动换行显示
		
		当一个元素浮动之后，层级提高了就会出现一些问题
			1.如果元素浮动之后并且父元素没有指定高度，那么父元素是撑不开的，就会导致后面的元素出现排列错误
				解决方案：
				a.给父元素设置高度
				b.清除浮动带来的问题
					在浮动后的容器中添加一个空的块容器
					<div style="clear:both"></div>
				c.给父元素设置一个属性	overflow:hidden
				
				overflow
					visible hidden scroll 		auto
					可见	隐藏	出现滚动条	超出时出现滚动条没超出时不出现
					对于超出的内容做处理
					用于处理文本内容超出容器时的策略
					
					实践中发现这个属性可以设置容器在浮动时产生的问题
			2.第一个元素浮动在左上角，后面的依次靠在前一个的左上角
			3.在使用浮动的时候要保证同一行浮动的元素的高度要统一，否则会出现排列错误的情况
				
	背景
		设置背景颜色
		设置背景图
			当想在容器中显示图片的全部时需要将容器的宽高和图片宽高设置为一样
			当容器小图片大时只能显示一部分
				background-size:100% 100%;	-------->设置背景图的尺寸
			当容器大图片小时图片会平铺
				解决方案：background-repeat:no-repeat----------->设置背景图片为不平铺
						background-position:上下 左右----------->设置背景图片的位置
						简写方式
							background:red url("1.jpg") no-repeat center /100% 100%
										
		将小图片放到一张图片可以减少向服务器访问的次数	
			依赖background-position
			
	定位属性
		普通方式按照默认方式排列
			块------从上到下
			行内----从左到右
		用来实现将一个元素放在指定的位置
		
		四种定位方式
			1、静态定位		position:static;
				默认定位方式就是静态定位
				子元素默认出现在父元素的左上角
			
			2、绝对定位		position:absolute;
				一般会伴随着left和top（x轴，y轴）letf:0;top:0;定位到具有定位属性的前辈元素的左上角，
				如果前辈元素没有定位属性，则直接相对于浏览器的左上角定位
				
				相对于原点来进行位置的设定，这个原点是具有定位属性的前辈元素的左上角，如果前辈元素没有设置定位属性
				则使用浏览器左上角作为原点
				
				通常来说，只要指定了position就要指定left和top（懒运动）
				
				a、需要指定left和top的值，否则会待在原地不动
				b、层级的问题
					一旦加了定位，那么它的层级会提高，写在后面的层级比写在前面的层级高。
					使用z-index:1;可以修改层级，它的数字越大层级越高
			
			3、相对定位		position:relative
				相对于自己的位置来定位，但是自己原来的位置不会消失。与left和top共同作用
				主要用于给绝对定位的元素提供原点支撑，又不会影响其他元素的排列
			
			4、固定定位		position:fixed;left:100px;top:100px;
				将元素固定在某个位置
				无论在任何时候都会参照浏览器的左上角为原点
			
		在计算机中表示一条线的方法
			OpenCV
			线与线连接放方式
				1、连接
					拼接
		
		行内样式
			只能对当前元素起作用
		嵌入式
		外部样式
			<link rel="stylesheet" href="demo.css">
			把内容和样式进行分离
			
		<header></header>	头部标签
			
		继承
			所有关于文字修饰的属性都可以继承，其他属性继承不了
			继承的优先级是最低的
			
		
			
			
			
			
			
			
			
		position 315 500
			
	javascript
		window.onload=funcktion(ev) {}
			
			
			
	git解决协同开发，完成版本控制和管理
		把代码版本记录下来，也可以把自己的代码发布给别人看
		分支
	SVN
	
	github	利用git的技术
			
		git用法
			1、设置用户名，邮箱
			git config --global user.name "sd517125"
			2、git 初始化，让git接收管理文件夹
			git init
			3、将代码添加到本地仓库
			git add 需要添加的文件				//将代码添加到本地仓库
			git commit -m "one"	//-m是注释		//确定添加
			4、查看git中有多少版本以及版本信息
			git log
			5、查看代码的状态（有没有版本需要提交）
			git status
			6、回到上个版本
			git reset --hard HEAD^
			7、切到指定版本
			git reset --hard 版本编号
			8、上传
			git remote add origin https://github.com/
			git push origin master
			9、下载
			git clone 远程地址
			修改
			git add
			git commit
			git push origin master
			
		coding	功能与github类似，是一个代码仓库
		github	
			yueyingjun
			githubpage
			
			
		markdown	
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		float: left;
		
		
		git init
		
		
		git push
		
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	